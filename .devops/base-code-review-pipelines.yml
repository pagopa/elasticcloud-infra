parameters:
  - name: 'ENV'
    displayName: 'Environment to deploy'
    type: string
  - name: 'ENV_FOLDER'
    displayName: 'Environment folder location'
    type: string
  - name: 'WORKING_DIR_MODULE'
    displayName: 'generic working dir'
    type: string
    default: ''
  - name: 'SC_PLAN_NAME'
    type: string
  - name: 'AKS_APISERVER_URL'
    type: string
    default: ''
  - name: 'AKS_AZURE_DEVOPS_SA_CACRT'
    type: string
    default: ''
  - name: 'AKS_AZURE_DEVOPS_SA_TOKEN'
    type: string
    default: ''
  - name: 'AKS_NAME'
    type: string
    default: ''
  - name: 'SECOND_AKS_APISERVER_URL'
    type: string
    default: ''
  - name: 'SECOND_AKS_AZURE_DEVOPS_SA_CACRT'
    type: string
    default: ''
  - name: 'SECOND_AKS_AZURE_DEVOPS_SA_TOKEN'
    type: string
    default: ''
  - name: 'SECOND_AKS_NAME'
    type: string
    default: ''
  - name: 'POOL_NAME'
    type: string
    default: ""
  - name: 'TIME_OUT'
    type: number
    default: 15
  - name: 'TF_SUMMARIZE'
    type: string
    default: ''
  - name: 'MODULE_USE_AKS'
    type: boolean
    default: false
  - name: 'MODULE_USE_SECOND_AKS'
    type: string # using string because parameter value comes from pipeline definition and is not interpreted as boolean
    default: 'false'
  - name: 'STAGE_NAME'
    type: string
    default: ''



stages:
  - stage: ${{replace(parameters.ENV, '-', '_')}}${{ if ne(parameters.WORKING_DIR_MODULE, '') }}_${{parameters.STAGE_NAME}}
    displayName: 'Code review for ${{parameters.ENV}}'
    dependsOn: []
    condition: succeeded()
    ${{ if ne(parameters.POOL_NAME, '') }}:
      pool:
        name: "${{parameters.POOL_NAME}}"
    jobs:
      - ${{ if ne(parameters.WORKING_DIR_MODULE, '') }}:
        - job: tfplan_module
          strategy:
            parallel: 1
          timeoutInMinutes: ${{parameters.TIME_OUT}}
          steps:
            - checkout: self
            # 1. Install terraform
            - template: templates/terraform-setup/template.yaml@terraform
            - template: templates/terraform-summarize/template.yaml@terraform
            # 2. Run terraform plan
            - template: templates/terraform-plan/template.yaml@terraform
              parameters:
                TF_ENVIRONMENT_FOLDER: ${{ lower(parameters.ENV_FOLDER) }}
                WORKINGDIR: ${{ parameters.WORKING_DIR_MODULE }}
                AZURE_SERVICE_CONNECTION_NAME: ${{parameters.SC_PLAN_NAME}}
                ${{ if ne(parameters.TF_SUMMARIZE, '') }}:
                  TF_SUMMARIZE: ${{parameters.TF_SUMMARIZE}}
                ${{ if eq(parameters.MODULE_USE_AKS, 'true') }}:
                  AKS_NAME: ${{ parameters.AKS_NAME }}
                  AKS_API_SERVER_URL: ${{ parameters.AKS_APISERVER_URL }}
                  AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ parameters.AKS_AZURE_DEVOPS_SA_CACRT }}
                  AKS_AZURE_DEVOPS_SA_TOKEN: ${{ parameters.AKS_AZURE_DEVOPS_SA_TOKEN }}
                ${{ if ne(parameters.MODULE_USE_SECOND_AKS, 'false') }}:
                  SECOND_AKS_NAME: ${{ parameters.SECOND_AKS_NAME }}
                  SECOND_AKS_API_SERVER_URL: ${{ parameters.SECOND_AKS_APISERVER_URL }}
                  SECOND_AKS_AZURE_DEVOPS_SA_CA_CRT: ${{ parameters.SECOND_AKS_AZURE_DEVOPS_SA_CACRT }}
                  SECOND_AKS_AZURE_DEVOPS_SA_TOKEN: ${{ parameters.SECOND_AKS_AZURE_DEVOPS_SA_TOKEN }}

